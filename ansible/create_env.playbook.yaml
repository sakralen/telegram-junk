- name: run local terraform
  hosts: 127.0.0.1
  connection: local
  tasks:
    - name: Run terraform
      terraform:
        project_path: "../terraform"
        force_init: yes
        state: present
      register: trfrm

    - name: Add movie_bot
      add_host:
        name: movie_bot_docker
        groups: nodes
        ansible_host: "{{ trfrm.outputs.servers.value.movie_bot }}"
        ansible_ssh_private_key_file: ~/.ssh/key.txt
        ansible_ssh_common_args: "-o StrictHostKeyChecking=no"
        
- name: Timeout for instance creating
  hosts: 127.0.0.1
  connection: local     
  tasks:
    - name: Wait for server port 22
      wait_for:
        host: "{{ trfrm.outputs.servers.value.movie_bot }}"
        port: 22
        
- name: Deploy app from docker image
  hosts: movie_bot_docker
  remote_user: ubuntu
  tasks:
    - block:   
      - name: Update apt cache
        apt:
          update_cache: yes
        become: yes
        
      - name: Add key GPG
        apt_key:
          url: https://download.docker.com/linux/ubuntu/gpg
          state: present
        become: yes
      
      - name: Add docker repository
        apt_repository:
          repo: deb [arch=amd64] https://download.docker.com/linux/ubuntu focal stable
          state: present
        become: yes
          
      - name: Install docker
        apt:
          name: docker-ce
          state: present
        become: yes

      - name: Check docker is active
        service:
          name: docker
          enabled: yes
      
      - name: Ensure group "docker" exists
        ansible.builtin.group:
          name: docker
          state: present
      
      - name: Adding user ubuntu to docker group
        user:
          name: ubuntu
          groups: docker
          append: yes
        become: yes
        
      - name: Change docker socket permission
        file:
          path: /var/run/docker.sock
          owner: ubuntu
          group: docker
        become: yes
      
      - name: Restart docker service
        become: yes
        service:
          name: docker
          state: restarted
          
      - name: Copy tar to host
        copy:
          src:  '../movie_bot-java-jar.tar'
          dest: /home/ubuntu/project/
          owner: ubuntu
          group: docker
          mode: 777
        become: yes
      
      - name: Load container from tar
        docker_image:
          name: movie_bot-java-jar:latest
          load_path: /home/ubuntu/project/movie_bot-java-jar.tar
          state: present
          source: load
      
      - name: Run docker container
        docker_container:
          name: movie_bot-app-container
          image: movie_bot-java-jar:latest
          state: started
          restart_policy: always
          ports:
            - "8080:6969"
 
#      rescue:
#      - name: Clean up resources because of an error
#         terraform:
#          project_path: "./terraform"
#           state: absent 
#         delegate_to: 127.0.0.1
